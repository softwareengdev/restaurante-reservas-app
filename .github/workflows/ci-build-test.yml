# .github/workflows/ci-build-test.yml
name: CI - Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  checks: write  # For test reports
  pull-requests: write  # For comments on PRs

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]  # Support for .NET 8

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # For full history if needed for versioning

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        dotnet-quality: 'ga'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Run unit tests with coverage
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --settings coverlet.runsettings

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: ${{ always() }}
      with:
        files: '**/TestResults/*.trx'

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: success()
      with:
        token: ${{ secrets.CODECOV_TOKEN }}  # Optional, if using Codecov
        files: '**/coverage.cobertura.xml'  # Adjust based on your coverage format

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: ${{ runner.os }}-nuget-

    - name: Notify on failure
      if: failure()
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "text": "CI Build/Test failed on ${{ github.ref }} by ${{ github.actor }}. Check: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
        slack-message-format: 'json'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}  # Configure in repo secrets
